# Test code for the vmware_guest_disk_disk module.

- import_role:
    name: prepare_vmware_tests
  vars:
    setup_attach_host: true
    setup_datastore: true
    setup_virtualmachines: true

- name: create new disk with invalid disk mode
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - datastore: "{{ rw_datastore }}"
          disk_mode: "invalid_disk_mode"
          scsi_controller: 0
          scsi_type: 'paravirtual'
          size_gb: 10
          state: present
          type: eagerzeroedthick
          unit_number: 2
  register: test_create_disk1
  ignore_errors: True

- debug:
    msg: "{{ test_create_disk1 }}"

- name: assert that changes were not made
  assert:
    that:
        - not(test_create_disk1 is changed)

- name: create new disk(s) with valid disk mode
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - datastore: "{{ rw_datastore }}"
          disk_mode: "independent_persistent"
          scsi_controller: 0
          scsi_type: 'paravirtual'
          size_gb: 1
          state: present
          type: eagerzeroedthick
          unit_number: 2
        - datastore: "{{ rw_datastore }}"
          disk_mode: "independent_nonpersistent"
          scsi_controller: 0
          scsi_type: 'paravirtual'
          size_gb: 1
          state: present
          type: eagerzeroedthick
          unit_number: 3
        - datastore: "{{ rw_datastore }}"
          disk_mode: "persistent"
          scsi_controller: 0
          scsi_type: 'paravirtual'
          size_gb: 1
          state: present
          type: eagerzeroedthick
          unit_number: 4
  register: test_create_disk2

- debug:
    msg: "{{ test_create_disk2 }}"

- name: assert that changes were made
  assert:
    that:
        - test_create_disk2 is changed

- name: create new disk with custom shares
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - size_gb: 1
          type: eagerzeroedthick
          datastore: "{{ rw_datastore }}"
          disk_mode: "independent_nonpersistent"
          scsi_controller: 1
          state: present
          unit_number: 4
          shares:
            level: custom
            level_value: 1300
  register: test_custom_shares

- debug:
    msg: "{{ test_custom_shares }}"

- name: assert that changes were made
  assert:
     that:
         - test_custom_shares is changed

- name: create new disk with custom IO limits and shares in IO Limits
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - size_gb: 1
          type: eagerzeroedthick
          datastore: "{{ rw_datastore }}"
          disk_mode: "independent_nonpersistent"
          scsi_controller: 2
          state: present
          unit_number: 4
          iolimit:
            limit: 1506
            shares:
              level: custom
              level_value: 1305
  register: test_custom_IoLimit_shares

- debug:
    msg: "{{ test_custom_IoLimit_shares }}"

- name: assert that changes were made
  assert:
     that:
         - test_custom_IoLimit_shares is changed

- name: Update disk for custom IO limits in IO Limits
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - size_gb: 2
          type: eagerzeroedthick
          datastore: "{{ rw_datastore }}"
          disk_mode: "independent_nonpersistent"
          scsi_controller: 2
          state: present
          unit_number: 4
          iolimit:
            limit: 1500
            shares:
              level: custom
              level_value: 1305
  register: test_custom_IoLimit

- debug:
    msg: "{{ test_custom_IoLimit }}"

- name: assert that changes were made
  assert:
     that:
         - test_custom_IoLimit is changed

- name: Update disk for shares of IO limits
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - size_gb: 3
          type: eagerzeroedthick
          datastore: "{{ rw_datastore }}"
          disk_mode: "independent_nonpersistent"
          scsi_controller: 2
          state: present
          unit_number: 4
          iolimit:
            limit: 1500
            shares:
              level: low
              level_value: 650
  register: test_shares_IoLimit

- debug:
    msg: "{{ test_shares_IoLimit }}"

- name: assert that changes were made
  assert:
     that:
         - test_shares_IoLimit is changed

- name: Update disk for shares and IoLimits of IO limits
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - size_gb: 4
          type: eagerzeroedthick
          datastore: "{{ rw_datastore }}"
          disk_mode: "independent_nonpersistent"
          scsi_controller: 2
          state: present
          unit_number: 4
          iolimit:
            limit: 1507
            shares:
              level: high
              level_value: 1200
  register: test_shares_IoLimits

- debug:
    msg: "{{ test_shares_IoLimits }}"

- name: assert that changes were made
  assert:
     that:
         - test_shares_IoLimits is changed

- name: remove disks without destroy file
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - state: "absent"
          scsi_controller: 0
          unit_number: 4
          destroy: false
  register: test_remove_without_destroy

- debug:
    msg: "{{ test_remove_without_destroy }}"

- name: assert that changes were made
  assert:
    that:
        - test_remove_without_destroy is changed

- name: re-create disk with valid disk mode
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - datastore: "{{ rw_datastore }}"
          disk_mode: "persistent"
          scsi_controller: 0
          scsi_type: 'paravirtual'
          size_gb: 1
          state: present
          type: eagerzeroedthick
          unit_number: 4
  register: test_recreate_disk

- debug:
    msg: "{{ test_recreate_disk }}"

- name: assert that changes were made
  assert:
    that:
        - test_recreate_disk is changed

- name: create new disk with sharing (multi-writer) mode
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - datastore: "{{ rw_datastore }}"
          disk_mode: "independent_persistent"
          scsi_controller: 0
          scsi_type: 'paravirtual'
          size_gb: 1
          state: present
          type: eagerzeroedthick
          sharing: True
          unit_number: 6
  register: test_create_disk_sharing

- debug:
    msg: "{{ test_create_disk_sharing }}"

- name: assert that changes were made
  assert:
    that:
        - test_create_disk_sharing is changed

- name: create new disk with invalid disk type for sharing (multi-writer) mode
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - datastore: "{{ rw_datastore }}"
          disk_mode: "independent_persistent"
          scsi_controller: 0
          scsi_type: 'paravirtual'
          size_gb: 1
          state: present
          type: thin
          unit_number: 5
          sharing: True
  register: test_create_disk_sharing_invalid
  ignore_errors: True

- debug:
    msg: "{{ test_create_disk_sharing_invalid }}"

- name: assert that changes were not made
  assert:
    that:
        - not(test_create_disk_sharing_invalid is changed)

- name: remove disk with destroy file
  vmware_guest_disk:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ dc1 }}"
    validate_certs: no
    name: "{{ virtual_machines[0].name }}"
    disk:
        - state: "absent"
          scsi_controller: 0
          unit_number: 3
          destroy: true
        - state: "absent"
          scsi_controller: 0
          unit_number: 4
  register: test_remove_with_destroy

- debug:
    msg: "{{ test_remove_with_destroy }}"

- name: assert that changes were made
  assert:
    that:
        - test_remove_with_destroy is changed
