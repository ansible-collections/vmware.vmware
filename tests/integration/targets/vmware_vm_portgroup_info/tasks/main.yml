---
- block:
    - name: Import common vars
      ansible.builtin.include_vars:
        file: ../group_vars.yml

    - name: "Test setup: Create VM folder {{ test_folder }}"
      community.vmware.vcenter_folder:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ vm_datacenter }}"
        folder_name: "{{ test_folder }}"
        folder_type: vm
        state: present

    - name: "Test setup: Create VM guest {{ vm_name }}"
      community.vmware.vmware_guest:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        cluster: "{{ vm_cluster }}"
        datacenter: "{{ vm_datacenter }}"
        folder: "{{ vm_folder }}"
        state: present
        name: "{{ vm_name }}"
        disk: "{{ vm_disk }}"
        guest_id: "{{ vm_guest_id }}"
        hardware: "{{ vm_hardware }}"
        networks: "{{ vm_networks }}"
      register: my_vm

    - name: VM portgroup information
      vmware.vmware.vm_portgroup_info:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        port: "{{ vcenter_port }}"
        vm_names:
          - "{{ vm_name }}"
      register: __res

    - name: Print result
      ansible.builtin.debug:
        var: __res

    - name: Assert values
      ansible.builtin.assert:
        that:
          - __res.changed == False
          - __res.vm_portgroup_info[vm_name] | length == 1
          - __res.vm_portgroup_info[vm_name][0]['portgroup_name'] == "VM Network"
          - __res.vm_portgroup_info[vm_name][0]['nic_mac_address'] == "00:50:56:bd:d2:9e"
          - __res.vm_portgroup_info[vm_name][0]['nic_type'] == "VMXNET3"
          - __res.vm_portgroup_info[vm_name][0]['type'] == "DISTRIBUTED_PORTGROUP"

  always:
    - name: "Test teardown: Destroy VM guest {{ vm_name }}"
      community.vmware.vmware_guest:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        cluster: "{{ vm_cluster }}"
        datacenter: "{{ vm_datacenter }}"
        folder: "{{ vm_folder }}"
        state: absent
        force: true
        name: "{{ vm_name }}"

    - name: "Test teardown: Remove VM folder {{ test_folder }}"
      community.vmware.vcenter_folder:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ vm_datacenter }}"
        folder_name: "{{ test_folder }}"
        folder_type: vm
        state: absent
