---
- name: Power off vm
  vmware.vmware.vm_powerstate:
    datacenter: "{{ vcenter_datacenter }}"
    moid: "{{ test_vm_moid }}"
    state: powered-off

- name: Set vm options settings
  vmware.vmware._vm_stub: &set-vm-options-params
    name: "{{ test_vm_name }}"
    memory:
      enable_hot_add: false
    vm_options:
      maximum_remote_console_sessions: 4
      enable_encryption: true
      encrypted_vmotion: "opportunistic"
      encrypted_fault_tolerance: "opportunistic"
      enable_hardware_assisted_virtualization: false
      enable_io_mmu: true
      enable_secure_boot: false
      boot_firmware: efi
  register: _set_vm_options_params

- name: Set vm options settings - idempotence check
  vmware.vmware._vm_stub: *set-vm-options-params
  register: _set_vm_options_params_idempotent

- name: Check set vm options params tasks
  ansible.builtin.assert:
    that:
      - _set_vm_options_params is ansible.builtin.changed
      - _set_vm_options_params_idempotent is not ansible.builtin.changed

- name: Update vm options settings
  vmware.vmware._vm_stub: &update-vm-options-params
    name: "{{ test_vm_name }}"
    vm_options:
      enable_encryption: false
      encrypted_vmotion: "required"
      enable_hardware_assisted_virtualization: true
      enable_virtual_based_security: true
      enable_secure_boot: true
      boot_firmware: efi
  register: _update_vm_options_params

- name: Update vm options settings - idempotence check
  vmware.vmware._vm_stub: *update-vm-options-params
  register: _update_vm_options_params_idempotent

- name: Check update vm options params tasks
  ansible.builtin.assert:
    that:
      - _update_vm_options_params is ansible.builtin.changed
      - _update_vm_options_params_idempotent is not ansible.builtin.changed

- name: Set invalid console session count- expect failure
  vmware.vmware._vm_stub:
    name: "{{ test_vm_name }}"
    vm_options:
      maximum_remote_console_sessions: 400
  register: _invalid_console_session_count
  ignore_errors: true

- name: Set invalid virtualization based security - expect failure
  vmware.vmware._vm_stub:
    name: "{{ test_vm_name }}"
    vm_options:
      enable_virtual_based_security: true
      enable_secure_boot: false
  register: _invalid_virtualization_based_security
  ignore_errors: true

- name: Set invalid encryption and secure boot - expect failure
  vmware.vmware._vm_stub:
    name: "{{ test_vm_name }}"
    vm_options:
      enable_encryption: true
      enable_secure_boot: true
  register: _invalid_encryption_and_secure_boot
  ignore_errors: true

- name: Set invalid encryption and boot firmware - expect failure
  vmware.vmware._vm_stub:
    name: "{{ test_vm_name }}"
    vm_options:
      enable_encryption: true
      boot_firmware: bios
  register: _invalid_encryption_and_boot_firmware
  ignore_errors: true

- name: Check invalid tests
  ansible.builtin.assert:
    that:
      - _invalid_console_session_count is ansible.builtin.failed
      - _invalid_virtualization_based_security is ansible.builtin.failed
      - _invalid_encryption_and_secure_boot is ansible.builtin.failed
      - _invalid_encryption_and_boot_firmware is ansible.builtin.failed
