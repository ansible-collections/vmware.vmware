---
- name: Power off vm
  vmware.vmware.vm_powerstate:
    datacenter: "{{ vcenter_datacenter }}"
    moid: "{{ test_vm_moid }}"
    state: powered-off

- name: Set vm controller settings
  vmware.vmware._vm_stub: &set-controller-params
    name: "{{ test_vm_name }}"
    scsi_controllers:
      - bus_number: 0
        controller_type: paravirtual
        bus_sharing: noSharing
      - bus_number: 1
        controller_type: paravirtual
        bus_sharing: virtualSharing
      - bus_number: 2
        controller_type: lsilogic
    sata_controllers:
      - bus_number: 3
    nvme_controllers:
      - bus_number: 0
        bus_sharing: noSharing
      - bus_number: 2
        bus_sharing: physicalSharing
    usb_controllers:
      - bus_number: 0
        controller_type: usb2
        auto_connect_devices: true
        enable_ehci: true
      - bus_number: 1
        controller_type: usb3
        auto_connect_devices: false
        enable_ehci: true
  register: _set_controller_params

- name: Set vm controller settings - idempotence check
  vmware.vmware._vm_stub: *set-controller-params
  register: _set_controller_params_idempotent

- name: Check set controller params tasks
  ansible.builtin.assert:
    that:
      - _set_controller_params is ansible.builtin.changed
      - _set_controller_params_idempotent is not ansible.builtin.changed
      - _set_controller_params.changes.objects_to_add | length == 7
      - _set_controller_params.changes.objects_to_remove | length == 0
      - _set_controller_params.changes.objects_to_update | length == 0

- name: Update vm controller settings
  vmware.vmware._vm_stub: &update-controller-params
    name: "{{ test_vm_name }}"
    scsi_controllers:
      - bus_number: 0
        controller_type: paravirtual
      - bus_number: 1
        controller_type: lsilogic
        bus_sharing: noSharing
      - bus_number: 2
        controller_type: lsilogic
    nvme_controllers:
      - bus_number: 0
        bus_sharing: physicalSharing
      - bus_number: 2
    usb_controllers:
      - bus_number: 0
        controller_type: usb2
        auto_connect_devices: false
        enable_ehci: false
      - bus_number: 1
        controller_type: usb3
        auto_connect_devices: false
        enable_ehci: false # should be ignored for USB 3 controller
  register: _update_controller_params

- name: Update vm controller settings - idempotence check
  vmware.vmware._vm_stub: *update-controller-params
  register: _update_controller_params_idem

- name: Check update controller params tasks
  ansible.builtin.assert:
    that:
      - _update_controller_params is ansible.builtin.changed
      - _update_controller_params_idem is not ansible.builtin.changed
      - _update_controller_params.changes.objects_to_add | length == 1
      - _update_controller_params.changes.objects_to_remove | length == 1
      - _update_controller_params.changes.objects_to_update | length == 2

- name: Out of bounds bus number - expect failure
  vmware.vmware._vm_stub:
    name: "{{ test_vm_name }}"
    nvme_controllers:
      - bus_number: 0
      - bus_number: 4
  register: _out_of_bounds_bus_number
  ignore_errors: true

- name: Duplicate usb controller - expect failure
  vmware.vmware._vm_stub:
    name: "{{ test_vm_name }}"
    usb_controllers:
      - bus_number: 0
        controller_type: usb2
      - bus_number: 1
        controller_type: usb2
  register: _duplicate_usb_controller
  ignore_errors: true

- name: Remove controllers
  vmware.vmware._vm_stub: &remove-controller-params
    name: "{{ test_vm_name }}"
    scsi_controllers:
      - bus_number: 0
        controller_type: paravirtual
    sata_controllers: []
    nvme_controllers: []
  register: _remove_controller_params

- name: Remove controllers - idempotence check
  vmware.vmware._vm_stub: *remove-controller-params
  register: _remove_controller_params_idem

- name: Check remove controller tasks
  ansible.builtin.assert:
    that:
      - _out_of_bounds_bus_number is ansible.builtin.failed
      - _duplicate_usb_controller is ansible.builtin.failed
      - _remove_controller_params is ansible.builtin.changed
      - _remove_controller_params_idem is not ansible.builtin.changed
      - _remove_controller_params.changes.objects_to_add | length == 0
      - _remove_controller_params.changes.objects_to_update | length == 0
      - _remove_controller_params.changes.objects_to_remove | length == 7
